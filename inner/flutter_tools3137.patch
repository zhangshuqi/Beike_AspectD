From 2a3964fa0360107a4fb58a23d8611ec0631f8c15 Mon Sep 17 00:00:00 2001
From: tank <673373004@qq.com>
Date: Thu, 2 Nov 2023 16:30:31 +0800
Subject: [PATCH] =?UTF-8?q?=E5=85=BC=E5=AE=B9Beike=5FAspectD?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 .../lib/src/build_system/targets/common.dart   |  8 ++++++++
 .../lib/src/build_system/targets/web.dart      |  2 ++
 .../lib/src/commands/build_bundle.dart         |  4 ++++
 packages/flutter_tools/lib/src/compile.dart    | 18 ++++++++++++++++++
 4 files changed, 32 insertions(+)

diff --git a/packages/flutter_tools/lib/src/build_system/targets/common.dart b/packages/flutter_tools/lib/src/build_system/targets/common.dart
index 039bb5a7fd..6bd9e73fab 100644
--- a/packages/flutter_tools/lib/src/build_system/targets/common.dart
+++ b/packages/flutter_tools/lib/src/build_system/targets/common.dart
@@ -20,6 +20,8 @@ import 'dart_plugin_registrant.dart';
 import 'icon_tree_shaker.dart';
 import 'localizations.dart';
 import 'shader_compiler.dart';
+import '../../aop/aspectd.dart';
+
 
 /// Copies the pre-built flutter bundle.
 // This is a one-off rule for implementing build bundle in terms of assemble.
@@ -148,6 +150,11 @@ class KernelSnapshot extends Target {
 
   @override
   Future<void> build(Environment environment) async {
+   await AspectdHook.enableAspectd();
+   await buildImpl(environment);
+  }
+
+  Future<CompilerOutput> buildImpl(Environment environment) async {
     final KernelCompiler compiler = KernelCompiler(
       fileSystem: environment.fileSystem,
       logger: environment.logger,
@@ -255,6 +262,7 @@ class KernelSnapshot extends Target {
     if (output == null || output.errorCount != 0) {
       throw Exception();
     }
+    return output;
   }
 }
 
diff --git a/packages/flutter_tools/lib/src/build_system/targets/web.dart b/packages/flutter_tools/lib/src/build_system/targets/web.dart
index 1799e2c583..3984ef6c57 100644
--- a/packages/flutter_tools/lib/src/build_system/targets/web.dart
+++ b/packages/flutter_tools/lib/src/build_system/targets/web.dart
@@ -30,6 +30,7 @@ import '../exceptions.dart';
 import 'assets.dart';
 import 'localizations.dart';
 import 'shader_compiler.dart';
+import '../../aop/aop_manager.dart';
 
 /// Whether the application has web plugins.
 const String kHasWebPlugins = 'HasWebPlugins';
@@ -183,6 +184,7 @@ class Dart2JSTarget extends Dart2WebTarget {
       logger: environment.logger,
       processManager: environment.processManager,
     );
+    await AopManager.hookSnapshotCommand(environment.buildDir.childFile('app.dill').path, buildMode);
 
     // Run the dart2js compilation in two stages, so that icon tree shaking can
     // parse the kernel file for web builds.
diff --git a/packages/flutter_tools/lib/src/commands/build_bundle.dart b/packages/flutter_tools/lib/src/commands/build_bundle.dart
index 434ab77432..0d06bb9fad 100644
--- a/packages/flutter_tools/lib/src/commands/build_bundle.dart
+++ b/packages/flutter_tools/lib/src/commands/build_bundle.dart
@@ -12,6 +12,7 @@ import '../project.dart';
 import '../reporting/reporting.dart';
 import '../runner/flutter_command.dart';
 import 'build.dart';
+import '../aop/aspectd.dart';
 
 class BuildBundleCommand extends BuildSubCommand {
   BuildBundleCommand({
@@ -93,6 +94,9 @@ class BuildBundleCommand extends BuildSubCommand {
 
   @override
   Future<FlutterCommandResult> runCommand() async {
+    
+    await AspectdHook.enableAspectd();
+
     final String targetPlatform = stringArg('target-platform')!;
     final TargetPlatform platform = getTargetPlatformForName(targetPlatform);
     // Check for target platforms that are only allowed via feature flags.
diff --git a/packages/flutter_tools/lib/src/compile.dart b/packages/flutter_tools/lib/src/compile.dart
index 6774080a54..22b68a8c06 100644
--- a/packages/flutter_tools/lib/src/compile.dart
+++ b/packages/flutter_tools/lib/src/compile.dart
@@ -18,6 +18,7 @@ import 'base/logger.dart';
 import 'base/platform.dart';
 import 'build_info.dart';
 import 'convert.dart';
+import 'aop/aspectd.dart';
 
 /// Opt-in changes to the dart compilers.
 const List<String> kDartCompilerExperiments = <String>[
@@ -241,6 +242,9 @@ class KernelCompiler {
     required List<String> dartDefines,
     required PackageConfig packageConfig,
   }) async {
+    
+    await AspectdHook.enableAspectd();
+
     final TargetPlatform? platform = targetModel == TargetModel.dartdevc ? TargetPlatform.web_javascript : null;
     final String frontendServer = _artifacts.getArtifactPath(
       Artifact.frontendServerSnapshotForEngineDartSdk,
@@ -278,6 +282,8 @@ class KernelCompiler {
         toMultiRootPath(dartPluginRegistrantFileUri, _fileSystemScheme, _fileSystemRoots, _fileSystem.path.separator == r'\');
     }
 
+    bool aopConfig = AspectdHook.configFileExists();
+
     final List<String> command = <String>[
       engineDartPath,
       '--disable-dart-dev',
@@ -325,6 +331,10 @@ class KernelCompiler {
         '--incremental',
         '--initialize-from-dill',
         initializeFromDill,
+      ],
+       if (aopConfig) ...<String>[
+        '--aop',
+        '1',
       ],
       if (platformDill != null) ...<String>[
         '--platform',
@@ -750,6 +760,10 @@ class DefaultResidentCompiler implements ResidentCompiler {
     String? outputPath,
     {String? additionalSourceUri}
   ) async {
+
+    await AspectdHook.enableAspectd();
+    bool aopConfig = AspectdHook.configFileExists();
+
     final TargetPlatform? platform = (targetModel == TargetModel.dartdevc) ? TargetPlatform.web_javascript : null;
     final String frontendServer = _artifacts.getArtifactPath(
       Artifact.frontendServerSnapshotForEngineDartSdk,
@@ -811,6 +825,10 @@ class DefaultResidentCompiler implements ResidentCompiler {
         '--platform',
         platformDill!,
       ],
+      if (aopConfig) ...<String>[
+        '--aop',
+        '1',
+      ],
       if (unsafePackageSerialization) '--unsafe-package-serialization',
       // See: https://github.com/flutter/flutter/issues/103994
       '--verbosity=error',
-- 
2.37.1 (Apple Git-137.1)

