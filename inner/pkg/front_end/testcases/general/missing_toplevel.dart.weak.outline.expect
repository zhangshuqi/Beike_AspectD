library;
//
// Problems in library:
//
// pkg/front_end/testcases/general/missing_toplevel.dart:27:48: Error: The operator '+' isn't defined for the class 'EmptyClass'.
//  - 'EmptyClass' is from 'pkg/front_end/testcases/general/missing_toplevel.dart'.
// Try correcting the operator to an existing operator, or defining a '+' operator.
// var missingBinary = classWithProperty.property += 2;
//                                                ^
//
// pkg/front_end/testcases/general/missing_toplevel.dart:28:40: Error: The operator '[]' isn't defined for the class 'ClassWithIndexSet'.
//  - 'ClassWithIndexSet' is from 'pkg/front_end/testcases/general/missing_toplevel.dart'.
// Try correcting the operator to an existing operator, or defining a '[]' operator.
// var missingIndexGet = classWithIndexSet[0] ??= 2;
//                                        ^
//
// pkg/front_end/testcases/general/missing_toplevel.dart:29:40: Error: The operator '[]=' isn't defined for the class 'ClassWithIndexGet'.
//  - 'ClassWithIndexGet' is from 'pkg/front_end/testcases/general/missing_toplevel.dart'.
// Try correcting the operator to an existing operator, or defining a '[]=' operator.
// var missingIndexSet = classWithIndexGet[0] ??= 2;
//                                        ^
//
// pkg/front_end/testcases/general/missing_toplevel.dart:30:37: Error: The getter 'property' isn't defined for the class 'EmptyClass'.
//  - 'EmptyClass' is from 'pkg/front_end/testcases/general/missing_toplevel.dart'.
// Try correcting the name to the name of an existing getter, or defining a getter or field named 'property'.
// var missingPropertyGet = emptyClass.property;
//                                     ^^^^^^^^
//
// pkg/front_end/testcases/general/missing_toplevel.dart:31:37: Error: The setter 'property' isn't defined for the class 'EmptyClass'.
//  - 'EmptyClass' is from 'pkg/front_end/testcases/general/missing_toplevel.dart'.
// Try correcting the name to the name of an existing setter, or defining a setter or field named 'property'.
// var missingPropertySet = emptyClass.property = 42;
//                                     ^^^^^^^^
//
import self as self;
import "dart:core" as core;

class EmptyClass extends core::Object {
  synthetic constructor •() → self::EmptyClass
    ;
}
class ClassWithProperty extends core::Object {
  field self::EmptyClass property;
  synthetic constructor •() → self::ClassWithProperty
    ;
}
class ClassWithIndexSet extends core::Object {
  synthetic constructor •() → self::ClassWithIndexSet
    ;
  operator []=(core::int index, core::int value) → void
    ;
}
class ClassWithIndexGet extends core::Object {
  synthetic constructor •() → self::ClassWithIndexGet
    ;
  operator [](core::int index) → core::int?
    ;
}
static field self::EmptyClass emptyClass;
static field self::ClassWithProperty classWithProperty;
static field self::ClassWithIndexSet classWithIndexSet;
static field self::ClassWithIndexGet classWithIndexGet;
static field dynamic missingBinary;
static field dynamic missingIndexGet;
static field core::int missingIndexSet;
static field dynamic missingPropertyGet;
static field core::int missingPropertySet;
static method main() → dynamic
  ;
