library;
import self as self;
import "dart:core" as core;
import "dart:async" as asy;

import "dart:async";

class A<X extends core::Object? = dynamic> extends core::Object {
  synthetic constructor •() → self::A<self::A::X%>
    ;
}
static method foo<X extends core::Object?>(self::A<self::foo::X%> x) → asy::Future<self::foo::X?>
  ;
static method bar(core::String? y) → dynamic
  ;
static method test(self::A<core::String> a) → dynamic async 
  ;
static method test2(self::A<core::String> a) → dynamic async 
  ;
static method test3(self::A<core::String> a) → dynamic
  ;
static method main() → dynamic
  ;
