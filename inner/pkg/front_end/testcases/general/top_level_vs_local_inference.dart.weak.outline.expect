library;
//
// Problems in library:
//
// pkg/front_end/testcases/general/top_level_vs_local_inference.dart:16:14: Error: Inferred type argument 'dynamic' doesn't conform to the bound 'Column' of the type variable 'F' on 'TableSchema'.
//  - 'Column' is from 'pkg/front_end/testcases/general/top_level_vs_local_inference.dart'.
// Try specifying type arguments explicitly so that they conform to the bounds.
// var schema = TableSchema(fields: []);
//              ^
// pkg/front_end/testcases/general/top_level_vs_local_inference.dart:9:19: Context: This is the type variable whose bound isn't conformed to.
// class TableSchema<F extends Column, C extends TableContext> {
//                   ^
//
import self as self;
import "dart:core" as core;

class TableContext extends core::Object {
  synthetic constructor •() → self::TableContext
    ;
}
class Column extends core::Object {
  synthetic constructor •() → self::Column
    ;
}
class TableSchema<F extends self::Column, C extends self::TableContext> extends core::Object {
  constructor _() → self::TableSchema<self::TableSchema::F, self::TableSchema::C>
    ;
  static factory •<F extends self::Column, C extends self::TableContext>({required core::Iterable<self::TableSchema::•::F> fields, self::TableSchema::•::C? context}) → self::TableSchema<self::TableSchema::•::F, self::TableSchema::•::C>
    ;
}
static field self::TableSchema<dynamic, self::TableContext> schema;
static method method() → void
  ;
