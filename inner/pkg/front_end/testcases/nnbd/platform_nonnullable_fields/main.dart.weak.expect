library;
import self as self;
import "dart:test" as test;

import "dart:test";

static method main() → dynamic {
  test::Class1? c1;
  test::Class2? c2;
}

library;
//
// Problems in library:
//
// pkg/front_end/testcases/nnbd/platform_nonnullable_fields/patch_lib2.dart:34:14: Error: Field '_staticField' should be initialized because its type 'int' doesn't allow null.
//   static int _staticField;
//              ^^^^^^^^^^^^
//
// pkg/front_end/testcases/nnbd/platform_nonnullable_fields/patch_lib2.dart:32:7: Error: Field '_field' should be initialized because its type 'int' doesn't allow null.
//   int _field;
//       ^^^^^^
//
// pkg/front_end/testcases/nnbd/platform_nonnullable_fields/origin_lib.dart:8:3: Error: This constructor should initialize field '_field' because its type 'int' doesn't allow null.
//   Class2.constructor1();
//   ^
// pkg/front_end/testcases/nnbd/platform_nonnullable_fields/patch_lib2.dart:39:7: Context: '_field' is defined here.
//   int _field;
//       ^^^^^^
//
import self as test;
import "dart:_internal" as _in;
import "dart:core" as core;

import "dart:_internal";

part patch_lib2.dart;
@/* from org-dartlang-testcase:///patch_lib2.dart */ #C1
class Class1 extends core::Object {
  field core::int _field = null /* from org-dartlang-testcase:///patch_lib2.dart */;
  static field core::int _staticField = null /* from org-dartlang-testcase:///patch_lib2.dart */;
  synthetic constructor •() → test::Class1
    : super core::Object::•()
    ;
}
@/* from org-dartlang-testcase:///patch_lib2.dart */ #C1
class Class2 extends core::Object {
  field core::int _field /* from org-dartlang-testcase:///patch_lib2.dart */;
  constructor constructor2(core::int _field) → test::Class2
    : test::Class2::_field = _field, super core::Object::•()
    ;
  constructor constructor1() → test::Class2
    : test::Class2::_field = null, super core::Object::•()
    ;
}

constants  {
  #C1 = _in::_Patch {}
}
