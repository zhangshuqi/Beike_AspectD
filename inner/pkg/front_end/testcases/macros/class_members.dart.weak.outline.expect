library;
//
// Problems in library:
//
// pkg/front_end/testcases/macros/class_members_lib.dart:9:8: Error: Member 'existingMethod' conflicts with an existing member of the same name in the augmented class.
// Try changing the name of the member or adding an 'augment' modifier.
//   void existingMethod() {
//        ^^^^^^^^^^^^^^
// pkg/front_end/testcases/macros/class_members.dart:10:8: Context: This is the existing member.
//   void existingMethod() {
//        ^^^^^^^^^^^^^^
//
// pkg/front_end/testcases/macros/class_members_lib.dart:15:16: Error: Augmentation member 'orphanedMethod' doesn't match a member in the augmented class.
// Try changing the name to an existing member or removing the 'augment' modifier.
//   augment void orphanedMethod() {
//                ^^^^^^^^^^^^^^
//
// pkg/front_end/testcases/macros/class_members_lib.dart:33:15: Error: Member 'staticExistingMethod' conflicts with an existing member of the same name in the augmented class.
// Try changing the name of the member or adding an 'augment' modifier.
//   static void staticExistingMethod() {
//               ^^^^^^^^^^^^^^^^^^^^
// pkg/front_end/testcases/macros/class_members.dart:22:15: Context: This is the existing member.
//   static void staticExistingMethod() {
//               ^^^^^^^^^^^^^^^^^^^^
//
// pkg/front_end/testcases/macros/class_members_lib.dart:39:23: Error: Augmentation member 'staticOrphanedMethod' doesn't match a member in the augmented class.
// Try changing the name to an existing member or removing the 'augment' modifier.
//   augment static void staticOrphanedMethod() {
//                       ^^^^^^^^^^^^^^^^^^^^
//
// pkg/front_end/testcases/macros/class_members_lib.dart:21:12: Error: Member 'existingSetter' conflicts with an existing member of the same name in the augmented class.
// Try changing the name of the member or adding an 'augment' modifier.
//   void set existingSetter(_) {
//            ^^^^^^^^^^^^^^
// pkg/front_end/testcases/macros/class_members.dart:16:12: Context: This is the existing member.
//   void set existingSetter(_) {
//            ^^^^^^^^^^^^^^
//
// pkg/front_end/testcases/macros/class_members_lib.dart:27:20: Error: Augmentation member 'orphanedSetter' doesn't match a member in the augmented class.
// Try changing the name to an existing member or removing the 'augment' modifier.
//   augment void set orphanedSetter(_) {
//                    ^^^^^^^^^^^^^^
//
// pkg/front_end/testcases/macros/class_members_lib.dart:45:19: Error: Member 'staticExistingSetter' conflicts with an existing member of the same name in the augmented class.
// Try changing the name of the member or adding an 'augment' modifier.
//   static void set staticExistingSetter(_) {
//                   ^^^^^^^^^^^^^^^^^^^^
// pkg/front_end/testcases/macros/class_members.dart:28:19: Context: This is the existing member.
//   static void set staticExistingSetter(_) {
//                   ^^^^^^^^^^^^^^^^^^^^
//
// pkg/front_end/testcases/macros/class_members_lib.dart:51:27: Error: Augmentation member 'staticOrphanedSetter' doesn't match a member in the augmented class.
// Try changing the name to an existing member or removing the 'augment' modifier.
//   augment static void set staticOrphanedSetter(_) {
//                           ^^^^^^^^^^^^^^^^^^^^
//
// pkg/front_end/testcases/macros/class_members_lib.dart:60:8: Error: Member 'existingMethod' conflicts with an existing member of the same name in the augmented class.
// Try changing the name of the member or adding an 'augment' modifier.
//   void existingMethod() {
//        ^^^^^^^^^^^^^^
// pkg/front_end/testcases/macros/class_members_part.dart:8:8: Context: This is the existing member.
//   void existingMethod() {
//        ^^^^^^^^^^^^^^
//
// pkg/front_end/testcases/macros/class_members_lib.dart:66:16: Error: Augmentation member 'orphanedMethod' doesn't match a member in the augmented class.
// Try changing the name to an existing member or removing the 'augment' modifier.
//   augment void orphanedMethod() {
//                ^^^^^^^^^^^^^^
//
// pkg/front_end/testcases/macros/class_members_lib.dart:84:15: Error: Member 'staticExistingMethod' conflicts with an existing member of the same name in the augmented class.
// Try changing the name of the member or adding an 'augment' modifier.
//   static void staticExistingMethod() {
//               ^^^^^^^^^^^^^^^^^^^^
// pkg/front_end/testcases/macros/class_members_part.dart:20:15: Context: This is the existing member.
//   static void staticExistingMethod() {
//               ^^^^^^^^^^^^^^^^^^^^
//
// pkg/front_end/testcases/macros/class_members_lib.dart:90:23: Error: Augmentation member 'staticOrphanedMethod' doesn't match a member in the augmented class.
// Try changing the name to an existing member or removing the 'augment' modifier.
//   augment static void staticOrphanedMethod() {
//                       ^^^^^^^^^^^^^^^^^^^^
//
// pkg/front_end/testcases/macros/class_members_lib.dart:72:12: Error: Member 'existingSetter' conflicts with an existing member of the same name in the augmented class.
// Try changing the name of the member or adding an 'augment' modifier.
//   void set existingSetter(_) {
//            ^^^^^^^^^^^^^^
// pkg/front_end/testcases/macros/class_members_part.dart:14:12: Context: This is the existing member.
//   void set existingSetter(_) {
//            ^^^^^^^^^^^^^^
//
// pkg/front_end/testcases/macros/class_members_lib.dart:78:20: Error: Augmentation member 'orphanedSetter' doesn't match a member in the augmented class.
// Try changing the name to an existing member or removing the 'augment' modifier.
//   augment void set orphanedSetter(_) {
//                    ^^^^^^^^^^^^^^
//
// pkg/front_end/testcases/macros/class_members_lib.dart:96:19: Error: Member 'staticExistingSetter' conflicts with an existing member of the same name in the augmented class.
// Try changing the name of the member or adding an 'augment' modifier.
//   static void set staticExistingSetter(_) {
//                   ^^^^^^^^^^^^^^^^^^^^
// pkg/front_end/testcases/macros/class_members_part.dart:26:19: Context: This is the existing member.
//   static void set staticExistingSetter(_) {
//                   ^^^^^^^^^^^^^^^^^^^^
//
// pkg/front_end/testcases/macros/class_members_lib.dart:102:27: Error: Augmentation member 'staticOrphanedSetter' doesn't match a member in the augmented class.
// Try changing the name to an existing member or removing the 'augment' modifier.
//   augment static void set staticOrphanedSetter(_) {
//                           ^^^^^^^^^^^^^^^^^^^^
//
import self as self;
import "dart:core" as core;

import "org-dartlang-testcase:///class_members.dart";

part class_members_part.dart;
class Class1 extends core::Object {
  synthetic constructor •() → self::Class1
    ;
  method existingMethod() → void
    ;
  external method augmentedMethod() → void;
  set existingSetter(dynamic _) → void
    ;
  external set augmentedSetter(dynamic _) → void;
  static method staticExistingMethod() → void
    ;
  external static method staticAugmentedMethod() → void;
  static set staticExistingSetter(dynamic _) → void
    ;
  external static set staticAugmentedSetter(dynamic _) → void;
  method /* from org-dartlang-testcase:///class_members_lib.dart */ injectedMethod() → void
    ;
  method /* from org-dartlang-testcase:///class_members_lib.dart */ orphanedMethod() → void
    ;
  set /* from org-dartlang-testcase:///class_members_lib.dart */ injectedSetter(dynamic _) → void
    ;
  set /* from org-dartlang-testcase:///class_members_lib.dart */ orphanedSetter(dynamic _) → void
    ;
  static method /* from org-dartlang-testcase:///class_members_lib.dart */ staticExistingMethod#1() → void
    ;
  static method /* from org-dartlang-testcase:///class_members_lib.dart */ staticInjectedMethod() → void
    ;
  static method /* from org-dartlang-testcase:///class_members_lib.dart */ staticOrphanedMethod() → void
    ;
  static set /* from org-dartlang-testcase:///class_members_lib.dart */ staticExistingSetter#1(dynamic _) → void
    ;
  static set /* from org-dartlang-testcase:///class_members_lib.dart */ staticInjectedSetter(dynamic _) → void
    ;
  static set /* from org-dartlang-testcase:///class_members_lib.dart */ staticOrphanedSetter(dynamic _) → void
    ;
}
class Class2 extends core::Object { // from org-dartlang-testcase:///class_members_part.dart
  synthetic constructor •() → self::Class2
    ;
  method /* from org-dartlang-testcase:///class_members_lib.dart */ injectedMethod() → void
    ;
  method /* from org-dartlang-testcase:///class_members_lib.dart */ orphanedMethod() → void
    ;
  set /* from org-dartlang-testcase:///class_members_lib.dart */ injectedSetter(dynamic _) → void
    ;
  set /* from org-dartlang-testcase:///class_members_lib.dart */ orphanedSetter(dynamic _) → void
    ;
  static method /* from org-dartlang-testcase:///class_members_lib.dart */ staticExistingMethod#1() → void
    ;
  static method /* from org-dartlang-testcase:///class_members_lib.dart */ staticInjectedMethod() → void
    ;
  static method /* from org-dartlang-testcase:///class_members_lib.dart */ staticOrphanedMethod() → void
    ;
  static set /* from org-dartlang-testcase:///class_members_lib.dart */ staticExistingSetter#1(dynamic _) → void
    ;
  static set /* from org-dartlang-testcase:///class_members_lib.dart */ staticInjectedSetter(dynamic _) → void
    ;
  static set /* from org-dartlang-testcase:///class_members_lib.dart */ staticOrphanedSetter(dynamic _) → void
    ;
  method existingMethod() → void
    ;
  external method augmentedMethod() → void;
  set existingSetter(dynamic _) → void
    ;
  external set augmentedSetter(dynamic _) → void;
  static method staticExistingMethod() → void
    ;
  external static method staticAugmentedMethod() → void;
  static set staticExistingSetter(dynamic _) → void
    ;
  external static set staticAugmentedSetter(dynamic _) → void;
}
static method test(self::Class1 c1, self::Class2 c2) → dynamic
  ;
static method main() → dynamic
  ;
static method /* from org-dartlang-testcase:///class_members_lib.dart */ augmentTest(self::Class1 c1, self::Class2 c2) → void
  ;
static method /* from org-dartlang-testcase:///class_members_lib.dart */ injectedMethod(self::Class1 c1, self::Class2 c2) → void
  ;
