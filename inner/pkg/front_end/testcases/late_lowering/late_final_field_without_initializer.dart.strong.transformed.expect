library;
import self as self;
import "dart:core" as core;
import "dart:_internal" as _in;

class Class extends core::Object {
  static field core::int? _#lateStaticField1 = null;
  static field core::int? _#lateStaticField2 = null;
  field core::int? _#Class#lateInstanceField = null;
  synthetic constructor •() → self::Class
    : super core::Object::•()
    ;
  static get lateStaticField1() → core::int
    return let final core::int? #t1 = self::Class::_#lateStaticField1 in #t1 == null ?{core::int} throw new _in::LateError::fieldNI("lateStaticField1") : #t1{core::int};
  static set lateStaticField1(core::int lateStaticField1#param) → void
    if(self::Class::_#lateStaticField1 == null)
      self::Class::_#lateStaticField1 = lateStaticField1#param;
    else
      throw new _in::LateError::fieldAI("lateStaticField1");
  static get lateStaticField2() → core::int
    return let final core::int? #t2 = self::Class::_#lateStaticField2 in #t2 == null ?{core::int} throw new _in::LateError::fieldNI("lateStaticField2") : #t2{core::int};
  static set lateStaticField2(core::int lateStaticField2#param) → void
    if(self::Class::_#lateStaticField2 == null)
      self::Class::_#lateStaticField2 = lateStaticField2#param;
    else
      throw new _in::LateError::fieldAI("lateStaticField2");
  static method staticMethod() → dynamic {
    self::throws(() → core::int => self::Class::lateStaticField2, "Read value from uninitialized Class.lateStaticField2");
    self::Class::lateStaticField2 = 42;
    self::expect(42, self::Class::lateStaticField2);
    self::throws(() → core::int => self::Class::lateStaticField2 = 43, "Write value to initialized Class.lateStaticField2");
  }
  get lateInstanceField() → core::int
    return let final core::int? #t3 = this.{self::Class::_#Class#lateInstanceField}{core::int?} in #t3 == null ?{core::int} throw new _in::LateError::fieldNI("lateInstanceField") : #t3{core::int};
  set lateInstanceField(core::int lateInstanceField#param) → void
    if(this.{self::Class::_#Class#lateInstanceField}{core::int?} == null)
      this.{self::Class::_#Class#lateInstanceField} = lateInstanceField#param;
    else
      throw new _in::LateError::fieldAI("lateInstanceField");
  method instanceMethod() → dynamic {
    self::throws(() → core::int => this.{self::Class::lateInstanceField}{core::int}, "Read value from uninitialized Class.lateInstanceField");
    this.{self::Class::lateInstanceField} = 16;
    self::expect(16, this.{self::Class::lateInstanceField}{core::int});
    self::throws(() → core::int => this.{self::Class::lateInstanceField} = 17, "Write value to initialized Class.lateInstanceField");
  }
}
extension Extension on self::Class {
  static field lateExtensionField1 = self::_#Extension|lateExtensionField1;
  static get lateExtensionField1 = get self::Extension|lateExtensionField1;
  static set lateExtensionField1 = set self::Extension|lateExtensionField1;
  static field lateExtensionField2 = self::_#Extension|lateExtensionField2;
  static get lateExtensionField2 = get self::Extension|lateExtensionField2;
  static set lateExtensionField2 = set self::Extension|lateExtensionField2;
  static method staticMethod = self::Extension|staticMethod;
}
static field core::int? _#lateTopLevelField = null;
static field core::int? _#Extension|lateExtensionField1 = null;
static field core::int? _#Extension|lateExtensionField2 = null;
static get lateTopLevelField() → core::int
  return let final core::int? #t4 = self::_#lateTopLevelField in #t4 == null ?{core::int} throw new _in::LateError::fieldNI("lateTopLevelField") : #t4{core::int};
static set lateTopLevelField(core::int lateTopLevelField#param) → void
  if(self::_#lateTopLevelField == null)
    self::_#lateTopLevelField = lateTopLevelField#param;
  else
    throw new _in::LateError::fieldAI("lateTopLevelField");
static extension-member get Extension|lateExtensionField1() → core::int
  return let final core::int? #t5 = self::_#Extension|lateExtensionField1 in #t5 == null ?{core::int} throw new _in::LateError::fieldNI("lateExtensionField1") : #t5{core::int};
static extension-member set Extension|lateExtensionField1(core::int lateExtensionField1#param) → void
  if(self::_#Extension|lateExtensionField1 == null)
    self::_#Extension|lateExtensionField1 = lateExtensionField1#param;
  else
    throw new _in::LateError::fieldAI("lateExtensionField1");
static extension-member get Extension|lateExtensionField2() → core::int
  return let final core::int? #t6 = self::_#Extension|lateExtensionField2 in #t6 == null ?{core::int} throw new _in::LateError::fieldNI("lateExtensionField2") : #t6{core::int};
static extension-member set Extension|lateExtensionField2(core::int lateExtensionField2#param) → void
  if(self::_#Extension|lateExtensionField2 == null)
    self::_#Extension|lateExtensionField2 = lateExtensionField2#param;
  else
    throw new _in::LateError::fieldAI("lateExtensionField2");
static extension-member method Extension|staticMethod() → dynamic {
  self::throws(() → core::int => self::Extension|lateExtensionField2, "Read value from uninitialized Class.lateExtensionField2");
  self::Extension|lateExtensionField2 = 42;
  self::expect(42, self::Extension|lateExtensionField2);
  self::throws(() → core::int => self::Extension|lateExtensionField2 = 43, "Write value to initialized Class.lateExtensionField2");
}
static method main() → dynamic {
  self::throws(() → core::int => self::lateTopLevelField, "Read value from uninitialized lateTopLevelField");
  self::lateTopLevelField = 123;
  self::expect(123, self::lateTopLevelField);
  self::throws(() → core::int => self::lateTopLevelField = 124, "Write value to initialized lateTopLevelField");
  self::throws(() → core::int => self::Class::lateStaticField1, "Read value from uninitialized Class.lateStaticField1");
  self::Class::lateStaticField1 = 87;
  self::expect(87, self::Class::lateStaticField1);
  self::throws(() → core::int => self::Class::lateStaticField1 = 88, "Write value to initialized Class.lateStaticField1");
  self::Class::staticMethod();
  new self::Class::•().{self::Class::instanceMethod}(){() → dynamic};
  self::throws(() → core::int => self::Extension|lateExtensionField1, "Read value from uninitialized Extension.lateExtensionField1");
  self::Extension|lateExtensionField1 = 87;
  self::expect(87, self::Extension|lateExtensionField1);
  self::throws(() → core::int => self::Extension|lateExtensionField1 = 88, "Write value to initialized Extension.lateExtensionField1");
  self::Extension|staticMethod();
}
static method expect(dynamic expected, dynamic actual) → dynamic {
  if(!(expected =={core::Object::==}{(core::Object) → core::bool} actual))
    throw "Expected ${expected}, actual ${actual}";
}
static method throws(() → dynamic f, core::String message) → dynamic {
  dynamic value;
  try {
    value = f(){() → dynamic};
  }
  on core::Error catch(final core::Error e) {
    core::print(e);
    return;
  }
  throw "${message}: ${value}";
}
