library test;
import self as self;
import "dart:core" as core;

abstract class A extends core::Object {
  synthetic constructor •() → self::A
    ;
  abstract set x(covariant-by-declaration core::Object? value) → void;
}
class B extends core::Object implements self::A {
  covariant-by-declaration field core::Object? x;
  synthetic constructor •() → self::B
    ;
  method f(covariant-by-declaration core::Object? x) → void
    ;
}
class C<T extends core::Object? = dynamic> extends core::Object implements self::B {
  covariant-by-declaration covariant-by-class field self::C::T? x;
  synthetic constructor •() → self::C<self::C::T%>
    ;
  method f(covariant-by-declaration covariant-by-class self::C::T? x) → void
    ;
}
static method main() → dynamic
  ;
