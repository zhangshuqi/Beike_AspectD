library;
import self as self;
import "dart:core" as core;

class A8<X extends (self::A8::X, self::A8::Y) = (dynamic, core::num), Y extends core::num> extends core::Object {
  synthetic constructor •() → self::A8<self::A8::X, self::A8::Y>
    ;
}
class A9<X extends (self::A9::Y, self::A9::Z%) = (core::num, core::String?), Y extends core::num, Z extends core::String?> extends core::Object {
  synthetic constructor •() → self::A9<self::A9::X, self::A9::Y, self::A9::Z%>
    ;
}
class A10<X extends core::Object? = dynamic, Y extends core::Object? = dynamic> extends core::Object {
  synthetic constructor •() → self::A10<self::A10::X%, self::A10::Y%>
    ;
}
static method foo1((core::int, core::String?) r) → dynamic
  ;
static method foo2((core::int, core::String?) r, <X extends core::Object? = dynamic>() → X% f) → dynamic
  ;
static method foo3() → dynamic
  ;
static method foo4() → dynamic
  ;
static method foo5((core::int, core::String?) r, <X extends core::Object? = dynamic>() → (core::int, X%) f) → dynamic
  ;
static method foo6(<X extends core::Object? = dynamic, Y extends core::Object? = dynamic>(X%, Y%) → (X%, Y%) f, core::int x, core::String y) → dynamic
  ;
static method foo7(<X extends core::Object? = dynamic, Y extends core::Object? = dynamic, Z extends core::Object? = dynamic>(X%, Y%, Z%) → (X%, (Y%, Z%)) f, core::int x, core::String y, core::bool? z) → dynamic
  ;
static method foo8(self::A8<(dynamic, core::num), core::num> a) → dynamic
  ;
static method foo9(self::A9<(core::num, core::String?), core::num, core::String?> a) → dynamic
  ;
static method foo10<T extends core::Object? = dynamic>() → self::A10<(self::foo10::T%, self::foo10::T%), self::foo10::T%>
  ;
static method bar10() → dynamic
  ;
static method main() → dynamic
  ;
