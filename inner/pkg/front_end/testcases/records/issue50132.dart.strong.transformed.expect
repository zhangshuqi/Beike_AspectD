library;
import self as self;
import "dart:core" as core;

class A extends core::Object /*hasConstConstructor*/  {
  final field (core::int, core::int) pair;
  const constructor •(core::int x, core::int y) → self::A
    : self::A::pair = (x, y), super core::Object::•()
    ;
}
static method main() → void {
  core::print(#C4);
}

constants  {
  #C1 = 1
  #C2 = 2
  #C3 = (#C1, #C2)
  #C4 = self::A {pair:#C3}
}


Constructor coverage from constants:
org-dartlang-testcase:///issue50132.dart:
- A. (from org-dartlang-testcase:///issue50132.dart:7:9)
- Object. (from org-dartlang-sdk:///sdk/lib/core/object.dart)
