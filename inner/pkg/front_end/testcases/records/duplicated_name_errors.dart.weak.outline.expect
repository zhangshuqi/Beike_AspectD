library;
//
// Problems in library:
//
// pkg/front_end/testcases/records/duplicated_name_errors.dart:5:13: Error: Duplicated record type field name 'x'.
// Try renaming or removing one of the named record type fields.
// (int x, int x) foo1() => throw 0; // Error.
//             ^
// pkg/front_end/testcases/records/duplicated_name_errors.dart:5:6: Context: This is the existing record type field named 'x'.
// (int x, int x) foo1() => throw 0; // Error.
//      ^
//
// pkg/front_end/testcases/records/duplicated_name_errors.dart:6:16: Error: Duplicated record type field name 'x'.
// Try renaming or removing one of the named record type fields.
// (int x, String x) foo2() => throw 0; // Error.
//                ^
// pkg/front_end/testcases/records/duplicated_name_errors.dart:6:6: Context: This is the existing record type field named 'x'.
// (int x, String x) foo2() => throw 0; // Error.
//      ^
//
// pkg/front_end/testcases/records/duplicated_name_errors.dart:7:14: Error: Duplicated record type field name 'x'.
// Try renaming or removing one of the named record type fields.
// (int x, {int x}) foo3() => throw 0; // Error.
//              ^
// pkg/front_end/testcases/records/duplicated_name_errors.dart:7:6: Context: This is the existing record type field named 'x'.
// (int x, {int x}) foo3() => throw 0; // Error.
//      ^
//
// pkg/front_end/testcases/records/duplicated_name_errors.dart:8:17: Error: Duplicated record type field name 'x'.
// Try renaming or removing one of the named record type fields.
// (int x, {String x}) foo4() => throw 0; // Error.
//                 ^
// pkg/front_end/testcases/records/duplicated_name_errors.dart:8:6: Context: This is the existing record type field named 'x'.
// (int x, {String x}) foo4() => throw 0; // Error.
//      ^
//
// pkg/front_end/testcases/records/duplicated_name_errors.dart:9:14: Error: Duplicated record type field name 'x'.
// Try renaming or removing one of the named record type fields.
// ({int x, int x}) foo5() => throw 0; // Error.
//              ^
// pkg/front_end/testcases/records/duplicated_name_errors.dart:9:7: Context: This is the existing record type field named 'x'.
// ({int x, int x}) foo5() => throw 0; // Error.
//       ^
//
// pkg/front_end/testcases/records/duplicated_name_errors.dart:10:17: Error: Duplicated record type field name 'x'.
// Try renaming or removing one of the named record type fields.
// ({int x, String x}) foo6() => throw 0; // Error.
//                 ^
// pkg/front_end/testcases/records/duplicated_name_errors.dart:10:7: Context: This is the existing record type field named 'x'.
// ({int x, String x}) foo6() => throw 0; // Error.
//       ^
//
// pkg/front_end/testcases/records/duplicated_name_errors.dart:11:13: Error: Duplicated record type field name 'x'.
// Try renaming or removing one of the named record type fields.
// (int x, int x, int x) foo7() => throw 0; // Triplicated name. Error.
//             ^
// pkg/front_end/testcases/records/duplicated_name_errors.dart:11:6: Context: This is the existing record type field named 'x'.
// (int x, int x, int x) foo7() => throw 0; // Triplicated name. Error.
//      ^
//
// pkg/front_end/testcases/records/duplicated_name_errors.dart:11:20: Error: Duplicated record type field name 'x'.
// Try renaming or removing one of the named record type fields.
// (int x, int x, int x) foo7() => throw 0; // Triplicated name. Error.
//                    ^
// pkg/front_end/testcases/records/duplicated_name_errors.dart:11:6: Context: This is the existing record type field named 'x'.
// (int x, int x, int x) foo7() => throw 0; // Triplicated name. Error.
//      ^
//
import self as self;

static method foo1() → invalid-type
  ;
static method foo2() → invalid-type
  ;
static method foo3() → invalid-type
  ;
static method foo4() → invalid-type
  ;
static method foo5() → invalid-type
  ;
static method foo6() → invalid-type
  ;
static method foo7() → invalid-type
  ;
static method main() → dynamic
  ;
