library;
import self as self;
import "dart:core" as core;

static const field core::int annotation = #C1;
static field (core::int, core::String) topLevelFieldType = throw "";
static method topLevelMethodReturnType() → (core::int, {required b: core::String})
  return throw "";
static method topLevelSetterType(({required a: core::int, required b: core::String}) value) → void {}
static method topLevelMethodParameterType((core::String, core::int) o) → void {}
static method method() → void {
  (core::int, core::String) topLevelFieldType = throw "";
  function topLevelMethodReturnType() → (core::int, {required b: core::String})
    return throw "";
  function topLevelSetterType(({required a: core::int, required b: core::String}) value) → void {}
  function topLevelMethodParameterType((core::String, core::int) o) → void {}
}

constants  {
  #C1 = 1
}
