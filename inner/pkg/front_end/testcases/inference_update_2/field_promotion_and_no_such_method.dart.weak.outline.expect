library;
import self as self;
import "dart:core" as core;
import "field_promotion_and_no_such_method_lib.dart" as fie;

import "org-dartlang-testcase:///field_promotion_and_no_such_method_lib.dart" as otherLib;

abstract class C extends core::Object {
  final field core::int? _f1;
  final field core::int? _f2;
  constructor •(core::int? i) → self::C
    ;
}
abstract class D extends core::Object {
  final field core::int? _f1;
  constructor •(core::int? i) → self::D
    ;
}
class E extends core::Object implements self::D {
  synthetic constructor •() → self::E
    ;
  @core::override
  method noSuchMethod(core::Invocation invocation) → dynamic
    ;
  no-such-method-forwarder get _f1() → core::int?
    return this.{self::E::noSuchMethod}(new core::_InvocationMirror::_withType(#_f1, 1, const <core::Type*>[], const <dynamic>[], core::Map::unmodifiable<core::Symbol*, dynamic>(const <core::Symbol*, dynamic>{}))){(core::Invocation) → dynamic} as{TypeError,ForDynamic} core::int?;
}
class F extends core::Object implements fie::C {
  synthetic constructor •() → self::F
    ;
  @core::override
  method noSuchMethod(core::Invocation invocation) → dynamic
    ;
  no-such-method-forwarder get _f2() → core::int?
    return throw core::NoSuchMethodError::withInvocation(this, new core::_InvocationMirror::_withType(#_f2, 1, const <core::Type*>[], const <dynamic>[], core::Map::unmodifiable<core::Symbol*, dynamic>(const <core::Symbol*, dynamic>{})));
}
static method acceptsInt(core::int x) → void
  ;
static method testConflictsWithNoSuchMethodForwarder(self::C c) → void
  ;
static method testNoConflictWithNoSuchMethodForwarderForDifferentLib(self::C c) → void
  ;

library;
import self as fie;
import "dart:core" as core;

class C extends core::Object {
  synthetic constructor •() → fie::C
    ;
  get _f2() → core::int?
    ;
}


Extra constant evaluation status:
Evaluated: StaticGet @ org-dartlang-testcase:///field_promotion_and_no_such_method.dart:26:4 -> InstanceConstant(const _Override{})
Evaluated: SymbolLiteral @ org-dartlang-testcase:///field_promotion_and_no_such_method.dart:23:7 -> SymbolConstant(#_f1)
Evaluated: ListLiteral @ org-dartlang-testcase:///field_promotion_and_no_such_method.dart:23:7 -> ListConstant(const <Type*>[])
Evaluated: ListLiteral @ org-dartlang-testcase:///field_promotion_and_no_such_method.dart:23:7 -> ListConstant(const <dynamic>[])
Evaluated: MapLiteral @ org-dartlang-testcase:///field_promotion_and_no_such_method.dart:23:7 -> MapConstant(const <Symbol*, dynamic>{})
Evaluated: StaticGet @ org-dartlang-testcase:///field_promotion_and_no_such_method.dart:34:4 -> InstanceConstant(const _Override{})
Evaluated: SymbolLiteral @ org-dartlang-testcase:///field_promotion_and_no_such_method.dart:30:7 -> SymbolConstant(#_f2)
Evaluated: ListLiteral @ org-dartlang-testcase:///field_promotion_and_no_such_method.dart:30:7 -> ListConstant(const <Type*>[])
Evaluated: ListLiteral @ org-dartlang-testcase:///field_promotion_and_no_such_method.dart:30:7 -> ListConstant(const <dynamic>[])
Evaluated: MapLiteral @ org-dartlang-testcase:///field_promotion_and_no_such_method.dart:30:7 -> MapConstant(const <Symbol*, dynamic>{})
Extra constant evaluation: evaluated: 20, effectively constant: 10
