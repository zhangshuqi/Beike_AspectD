library;
import self as self;
import "dart:core" as core;

import "package:expect/expect.dart";

class A extends core::Object {
  constructor •() → self::A
    ;
  static factory foo() → self::A /* redirection-target: self::C::bar */
    return self::C::bar();
  method m() → core::int
    ;
}
class C extends self::A {
  constructor •() → self::C
    ;
  static factory bar() → self::C /* redirection-target: self::D::• */
    return new self::D::•();
  method m() → core::int
    ;
}
class D extends self::C {
  synthetic constructor •() → self::D
    ;
  method m() → core::int
    ;
}
static method main() → dynamic
  ;
