library;
import self as self;
import "dart:core" as core;

class Class1 extends core::Object {
  field core::int field;
  constructor •(core::int field) → self::Class1
    ;
  method toString() → core::String
    ;
}
class Class2 extends core::Object {
  field core::int field;
  constructor •(core::int field) → self::Class2
    ;
  method toString() → core::String
    ;
}
extension /* unnamed */ _extension#0 on self::Class1 {
  method method = self::_extension#0|method;
  tearoff method = self::_extension#0|get#method;
  method genericMethod = self::_extension#0|genericMethod;
  tearoff genericMethod = self::_extension#0|get#genericMethod;
  get property = self::_extension#0|get#property;
  set property = self::_extension#0|set#property;
}
extension /* unnamed */ _extension#1 on self::Class2 {
  method method = self::_extension#1|method;
  tearoff method = self::_extension#1|get#method;
  method genericMethod = self::_extension#1|genericMethod;
  tearoff genericMethod = self::_extension#1|get#genericMethod;
  get property = self::_extension#1|get#property;
  set property = self::_extension#1|set#property;
}
static extension-member method _extension#0|method(lowered final self::Class1 #this) → core::int
  ;
static extension-member method _extension#0|get#method(lowered final self::Class1 #this) → () → core::int
  return () → core::int => self::_extension#0|method(#this);
static extension-member method _extension#0|genericMethod<T extends core::num>(lowered final self::Class1 #this, self::_extension#0|genericMethod::T t) → core::num
  ;
static extension-member method _extension#0|get#genericMethod(lowered final self::Class1 #this) → <T extends core::num>(T) → core::num
  return <T extends core::num>(T t) → core::num => self::_extension#0|genericMethod<T>(#this, t);
static extension-member method _extension#0|get#property(lowered final self::Class1 #this) → core::int
  ;
static extension-member method _extension#0|set#property(lowered final self::Class1 #this, core::int value) → void
  ;
static extension-member method _extension#1|method(lowered final self::Class2 #this) → core::int
  ;
static extension-member method _extension#1|get#method(lowered final self::Class2 #this) → () → core::int
  return () → core::int => self::_extension#1|method(#this);
static extension-member method _extension#1|genericMethod<T extends core::num>(lowered final self::Class2 #this, self::_extension#1|genericMethod::T t) → core::num
  ;
static extension-member method _extension#1|get#genericMethod(lowered final self::Class2 #this) → <T extends core::num>(T) → core::num
  return <T extends core::num>(T t) → core::num => self::_extension#1|genericMethod<T>(#this, t);
static extension-member method _extension#1|get#property(lowered final self::Class2 #this) → core::int
  ;
static extension-member method _extension#1|set#property(lowered final self::Class2 #this, core::int value) → void
  ;
static method main() → dynamic
  ;
static method testExtension1(self::Class1 c0, self::Class1 c1, self::Class1? c0n, self::Class1? c1n) → dynamic
  ;
static method testExtension2(self::Class2 c0, self::Class2 c1, self::Class2? c0n) → dynamic
  ;
static method expect(dynamic expected, dynamic actual) → dynamic
  ;
